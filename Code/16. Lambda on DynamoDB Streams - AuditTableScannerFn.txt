import json
import sys
import time
import boto3

dynamodb = boto3.resource('dynamodb')
audit_table = dynamodb.Table('orders-audit-table')

sns_client = boto3.client('sns')

def lambda_handler(event, context):
    
    print('The event is ', event)
    for record in event['Records']:
        
        
        # Info about the new record inserted in the audit table
        print('The new image is ', record['dynamodb']['NewImage'])
        
        new_run_id = record['dynamodb']['NewImage']['run_id']['N']
        new_layer = record['dynamodb']['NewImage']['layer']['S']
        new_num_records = record['dynamodb']['NewImage']['num_records']['N']
        
        print('new_run_id is ', new_run_id)
        print('new_layer is ', new_layer)
        print('new_num_records is ', new_num_records)
        
        if new_layer != "s3_landing_layer":
    
            # Get the count for the same run_id in the s3_landing_layer
            get_landing_layer_response = audit_table.get_item( 
            Key = {
            'run_id': int(new_run_id),
            'layer': 's3_landing_layer'
            })
        
            print('The get_landing_layer_response is ', get_landing_layer_response)
            print('landing_layer num_records is ', get_landing_layer_response['Item']['num_records'])
            
            if int(get_landing_layer_response['Item']['num_records']) == int(new_num_records):
                print('Matching')
                subject = 'SUCCESS: ' +new_run_id +' ' +new_layer
                message = 'Number of records in ' +new_layer +' is ' + str(new_num_records) + '. Number of records in landing layer is ' + str(get_landing_layer_response['Item']['num_records'])
                success_response = sns_client.publish(
                                        TopicArn = 'arn:aws:sns:us-east-1:100163808729:orders-topic',
                                        Message = message,
                                        Subject = subject
                                        )
            else:
                print('Not Matching')
                subject = 'FAILURE: ' +new_run_id +' ' +new_layer
                message = 'Number of records in ' +new_layer +' is ' + str(new_num_records) + '. Number of records in landing layer is ' + str(get_landing_layer_response['Item']['num_records'])
                failure_response = sns_client.publish(
                                        TopicArn = 'arn:aws:sns:us-east-1:100163808729:orders-topic',
                                        Message = message,
                                        Subject = subject
                                        )
                
        else:
            
            pass
        
